/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 100.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000.0;
	SIMULATION_TIME = 100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("b1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("b2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("b3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("circuito_ativo")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("senha1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("senha1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha1";
}

SIGNAL("senha1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha1";
}

SIGNAL("senha1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha1";
}

SIGNAL("senha1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha1";
}

SIGNAL("senha2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("senha2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha2";
}

SIGNAL("senha2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha2";
}

SIGNAL("senha2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha2";
}

SIGNAL("senha2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha2";
}

SIGNAL("senha_reg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("senha_reg[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha_reg";
}

SIGNAL("senha_reg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha_reg";
}

SIGNAL("senha_reg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha_reg";
}

SIGNAL("senha_reg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha_reg";
}

SIGNAL("senha_reg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha_reg";
}

SIGNAL("senha_reg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha_reg";
}

SIGNAL("senha_reg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha_reg";
}

SIGNAL("senha_reg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "senha_reg";
}

SIGNAL("senha_trocada")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("estado_do_circuito")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("b4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("b1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18895.966;
		LEVEL 1 FOR 4989.384;
		LEVEL 0 FOR 76114.65;
	}
}

TRANSITION_LIST("b2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30360.934;
		LEVEL 1 FOR 4564.756;
		LEVEL 0 FOR 65074.31;
	}
}

TRANSITION_LIST("b3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 43312.101;
		LEVEL 1 FOR 5520.17;
		LEVEL 0 FOR 51167.729;
	}
}

TRANSITION_LIST("circuito_ativo")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18.039;
		LEVEL 1 FOR 43320.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 56646.961;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 6666;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
		}
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("senha1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("senha1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("senha1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("senha1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18918.402;
		LEVEL 1 FOR 81081.598;
	}
}

TRANSITION_LIST("senha2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("senha2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("senha2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("senha2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30376.617;
		LEVEL 1 FOR 69623.383;
	}
}

TRANSITION_LIST("senha_reg[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("senha_reg[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("senha_reg[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("senha_reg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30377.832;
		LEVEL 1 FOR 69622.168;
	}
}

TRANSITION_LIST("senha_reg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("senha_reg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("senha_reg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("senha_reg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 18918.402;
		LEVEL 1 FOR 81081.598;
	}
}

TRANSITION_LIST("senha_trocada")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 43337.823;
		LEVEL 1 FOR 1050.0;
		LEVEL 0 FOR 55612.177;
	}
}

TRANSITION_LIST("estado_do_circuito")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 106.157;
		LEVEL 1 FOR 11146.496;
		LEVEL 0 FOR 88747.347;
	}
}

TRANSITION_LIST("b4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2441.613;
		LEVEL 1 FOR 4564.756;
		LEVEL 0 FOR 6157.112;
		LEVEL 1 FOR 4246.285;
		LEVEL 0 FOR 82590.234;
	}
}

DISPLAY_LINE
{
	CHANNEL = "b1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "b2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "b3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "b4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "estado_do_circuito";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "senha1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "senha1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "senha1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "senha1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "senha1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "senha2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15;
}

DISPLAY_LINE
{
	CHANNEL = "senha2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "senha2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "senha2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "senha2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "senha_reg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
	CHILDREN = 17, 18, 19, 20, 21, 22, 23, 24;
}

DISPLAY_LINE
{
	CHANNEL = "senha_reg[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "senha_reg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "senha_reg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "senha_reg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "senha_reg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "senha_reg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "senha_reg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "senha_reg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "circuito_ativo";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "senha_trocada";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 19325;
	MASTER = TRUE;
}
;
